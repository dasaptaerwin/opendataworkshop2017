install.packages("ggplot2")
install.packages("pvclust")
install.packages("fpc")
install.packages("hydromad", repos="http://hydromad.catchment.org")
version
cite
cite("randomforest")
cite("R")
citation("RandomForest")
citation("randomForest")
library("randomForest")
install.packages("randomForest")
citation("randomForest")
install.packages("rpart")
install.packages(c("tree", "forecast"))
source("http://bioconductor.org/biocLite.R")
bioclite("pcaMethods")
biocLite("pcaMethods")
citation("rpart")
citation("forecast")
citation("tree")
citation("pcaMethods")
install.packages("rattle")
install.packages("swirl")
library("swirl")
install.packages("usingR")
install.packages("UsingR")
library(UsingR); data(galton)
par(mfrow=c(1,2))
hist(galton$child,col="blue",breaks=100)
hist(galton$parent,col="blue",breaks=100)
library(manipulate)
myHist <- function(mu){
hist(galton$child,col="blue",breaks=100)
lines(c(mu, mu), c(0, 150),col="red",lwd=5)
mse <- mean((galton$child - mu)^2)
text(63, 150, paste("mu = ", mu))
text(63, 140, paste("MSE = ", round(mse, 2)))
}
manipulate(myHist(mu), mu = slider(62, 74, step = 0.5))
freqData <- as.data.frame(table(galton$child, galton$parent))
names(freqData) <- c("child", "parent", "freq")
plot(as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child)),
pch = 21, col = "black", bg = "lightblue",
cex = .05 * freqData$freq,
xlab = "parent", ylab = "child")
install.packages("swirl")
install.packages("manipulate")
library("manipulate")
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
z <- x*w
mean(z)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit.origin <- lm( y ~ x - 1 )
summary(fit.origin)
data(mtcars)
fit <- lm(mpg ~ wt, data=mtcars)
summary(fit)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
m.x <- mean(x)
sd.x <- sd(x)
(x[1] - m.x)/sd.x
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm( y ~ x )
# Question 9: what value minimizes the sum of squared distances between these points and itself.
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
beta1 <- cor(y, x) *  sd(x) / sd(y)
(beta1 <- cor(y, x) *  sd(x) / sd(y))
(beta0 <- mean(x) - beta1 * mean(y))
rbind(c(beta0, beta1), coef(lm(x ~ y)))
yn <- (y - mean(y))/sd(y)
(yn <- (y - mean(y))/sd(y))
(xn <- (x - mean(x))/sd(x))
c(cor(y, x), cor(yn, xn), coef(lm(yn ~ xn))[2])
mean(w)
mean(x)
(beta1 <- cor(y, x) *  sd(x) / sd(y))
(beta0 <- mean(x) - beta1 * mean(y))
(beta1 <- cor(y, x) *  sd(x) / sd(y))
(beta0 <- mean(x) - beta1 * mean(y))
(beta0 <- 0 - beta1 * 0)
coef(lm(y ~ w))
beta1/beta0
beta0/beta1
Rversion
version()
R.version()
R
?version
R.Version()
library("swirl")
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
devtools::install_github(c("swirldev/swirl", "swirldev/swirlify"))
library(swirl)
swirl()
?cor
install.packages("citenet")
library(devtools)
install_github('hadley/httr')
install_github('ropensci/plotly')
library(plotly)
g <- ggplot(faithful, aes(x = eruptions, y = waiting)) +
stat_density_2d(aes(fill = ..level..), geom = "polygon") +
xlim(1, 6) + ylim(40, 100)
ggplotly(g)
plot_ly(z = volcano, type = "surface")
install_github("rfigshare", "ropensci")
fs_author_search("Boettiger")
rfigshare::fs_author_search("Boettiger")
rfigshare::fs_author_search("Boettiger")
fs_category_list()
rfigshare::fs_category_list()
install_github("ropensci/aRxiv")
aRxiv::arxiv_count('au:"Erwin"')
library(forecast)
# ETS forecasts
fit <- ets(USAccDeaths)
plot(forecast(fit))
# Automatic ARIMA forecasts
fit <- auto.arima(WWWusage)
plot(forecast(fit, h=20))
# ARFIMA forecasts
library(fracdiff)
x <- fracdiff.sim( 100, ma=-.4, d=.3)$series
fit <- arfima(x)
plot(forecast(fit, h=30))
# Forecasting with STL
tsmod <- stlm(USAccDeaths, modelfunction=ar)
plot(forecast(tsmod, h=36))
plot(stlf(AirPassengers, lambda=0))
decomp <- stl(USAccDeaths,s.window="periodic")
plot(forecast(decomp))
# TBATS forecasts
fit <- tbats(USAccDeaths)
plot(forecast(fit))
taylor.fit <- tbats(taylor)
plot(forecast(taylor.fit))
install.packages("rticles", type = "source")
install.packages("swirl")
library(swirl)
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
install.packages("bookdown")
library(phreeqc)
phrLoadDatabaseString(phreeqc.dat)
phrRunString(ex2)
so <- phrGetSelectedOutput()
head(so$n1)
(
(
attach(so$n1)
title <- "Gypsum-Anhydrite Stability"
xlabel <- "Temperature, in degrees celcius"
ylabel <- "Saturation index"
plot(temp.C., si_gypsum, main = title, xlab = xlabel, ylab = ylabel,
col = "darkred", xlim = c(25, 75), ylim = c(-0.4, 0.0))
plot(temp.C., si_gypsum, main = title, xlab = xlabel, ylab = ylabel,
col = "darkred", xlim = c(25, 75), ylim = c(-0.4, 0.0))
plot(temp.C., si_gypsum, main = title, xlab = xlabel, ylab = ylabel,
col = "darkred", xlim = c(25, 75), ylim = c(-0.4, 0.0))
setwd("~/Documents/BAPAK-2018/opendataworkshop2017/slides")
